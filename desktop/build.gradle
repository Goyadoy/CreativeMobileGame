buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:2.4.6'
    }
}

apply plugin: 'edu.sc.seis.launch4j'
apply plugin: "java"

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../android/assets"]

project.ext.mainClassName = "com.creativemobile.game.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../android/assets")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    archiveName = appName + "-desktop.jar"
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

launch4j {
    productName = appName
    companyName = 'CreativeMobile'
    copyright = 'CreativeMobile'
    outputDir = "libs"
    priority = 'high'
    bundledJrePath = 'jre'
    bundledJreAsFallback = true
    jreMinVersion = '1.8.0'
    mainClassName = project.mainClassName
    copyConfigurable = project.tasks.dist.outputs.files
    manifest = '../../app.manifest'
    jar = appName + "-desktop.jar"
    outfile = appName + '.exe'
}

tasks.launch4j.dependsOn dist
dist.dependsOn classes
